{"ast":null,"code":"// 1ere etape : importation de l'axios\nimport http from './axiosContext';\n\n// 2eme étape : (les paths des fonctions) path de la fonction create \nconst create = data => {\n  //data is what we will take from the front to the back puis stocké dans la bd\n  //utiliser post car create est une fonction POST\n  return http.post(\"/category/add\", data); //path parent de category fel back + path de la fonction dans le dossier Router\n};\n\n//path de la fonction getAll \nconst getAll = () => {\n  return http.get(\"/categorie/\");\n};\n\n//path de la fonction update \nconst update = (id, data) => {\n  return http.put(`/categorie/${id}`, data); //puisque 3ana id et data --- alt gr + 7 pour ecrire le path --- (/${id}) pour le ID\n};\n\n//path de la fonction getById \nconst getbyid = id => {\n  return http.get(`/categorie/get/${id}`);\n};\n\n//path de la fonction delete \nconst deleteCat = id => {\n  return http.delete(`/categorie/delete/${id}`);\n};\n\n// Derniere etape: exportation\nexport default {\n  create,\n  update,\n  getAll,\n  getbyid,\n  deleteCat\n};","map":{"version":3,"names":["http","create","data","post","getAll","get","update","id","put","getbyid","deleteCat","delete"],"sources":["C:/Users/Pc/Desktop/ecommerce Accessoires/front/src/services/categoryService.js"],"sourcesContent":["// 1ere etape : importation de l'axios\r\nimport http from './axiosContext';\r\n\r\n// 2eme étape : (les paths des fonctions) path de la fonction create \r\nconst create = (data) => { //data is what we will take from the front to the back puis stocké dans la bd\r\n    //utiliser post car create est une fonction POST\r\n    return http.post(\"/category/add\", data) //path parent de category fel back + path de la fonction dans le dossier Router\r\n}\r\n\r\n//path de la fonction getAll \r\nconst getAll = () => {\r\n    return http.get(\"/categorie/\")\r\n}\r\n\r\n//path de la fonction update \r\nconst update = (id , data) => {\r\n    return http.put(`/categorie/${id}`, data) //puisque 3ana id et data --- alt gr + 7 pour ecrire le path --- (/${id}) pour le ID\r\n}\r\n\r\n//path de la fonction getById \r\nconst getbyid = (id) => {\r\n    return http.get(`/categorie/get/${id}`)\r\n} \r\n\r\n//path de la fonction delete \r\nconst deleteCat = (id) => {\r\n    return http.delete(`/categorie/delete/${id}`)\r\n}\r\n\r\n// Derniere etape: exportation\r\nexport default {create , update , getAll , getbyid , deleteCat}"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,gBAAgB;;AAEjC;AACA,MAAMC,MAAM,GAAIC,IAAI,IAAK;EAAE;EACvB;EACA,OAAOF,IAAI,CAACG,IAAI,CAAC,eAAe,EAAED,IAAI,CAAC,EAAC;AAC5C,CAAC;;AAED;AACA,MAAME,MAAM,GAAGA,CAAA,KAAM;EACjB,OAAOJ,IAAI,CAACK,GAAG,CAAC,aAAa,CAAC;AAClC,CAAC;;AAED;AACA,MAAMC,MAAM,GAAGA,CAACC,EAAE,EAAGL,IAAI,KAAK;EAC1B,OAAOF,IAAI,CAACQ,GAAG,CAAE,cAAaD,EAAG,EAAC,EAAEL,IAAI,CAAC,EAAC;AAC9C,CAAC;;AAED;AACA,MAAMO,OAAO,GAAIF,EAAE,IAAK;EACpB,OAAOP,IAAI,CAACK,GAAG,CAAE,kBAAiBE,EAAG,EAAC,CAAC;AAC3C,CAAC;;AAED;AACA,MAAMG,SAAS,GAAIH,EAAE,IAAK;EACtB,OAAOP,IAAI,CAACW,MAAM,CAAE,qBAAoBJ,EAAG,EAAC,CAAC;AACjD,CAAC;;AAED;AACA,eAAe;EAACN,MAAM;EAAGK,MAAM;EAAGF,MAAM;EAAGK,OAAO;EAAGC;AAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}